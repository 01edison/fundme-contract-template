{
  "address": "0x40e82fa90fd07ad1384eb1B838c2F5958A9B7369",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5e756dd8d389b393c53f9de9a25f5d04b6eb3cdaf6cf708b43e753088404824a",
  "receipt": {
    "to": null,
    "from": "0x5fDcA3b883282Fcc911923A87dBaEc6851519a9c",
    "contractAddress": "0x40e82fa90fd07ad1384eb1B838c2F5958A9B7369",
    "transactionIndex": 2,
    "gasUsed": "1002779",
    "logsBloom": "0x
    "blockHash": "0xcf47c239515d4196408b1087891c0d6c947284fc316b92a34fec96aac8226fa7",
    "transactionHash": "0x5e756dd8d389b393c53f9de9a25f5d04b6eb3cdaf6cf708b43e753088404824a",
    "logs": [],
    "blockNumber": 11215246,
    "cumulativeGasUsed": "2015818",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "4e7f0097dcc59ab150adad4db9ed1be4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.9;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n    address[] public funders;\\r\\n\\r\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\r\\n    address public /* immutable */ i_owner;\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n    \\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress); // the aggregated price feed contract\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        if(addressToAmountFunded[msg.sender]==0){\\r\\n            addressToAmountFunded[msg.sender] += msg.value;\\r\\n            funders.push(msg.sender);\\r\\n        }else{\\r\\n            addressToAmountFunded[msg.sender] =  addressToAmountFunded[msg.sender] + msg.value;\\r\\n        }\\r\\n        \\r\\n    }\\r\\n    \\r\\n    function getVersion() public view returns (uint256){\\r\\n        //  priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n    \\r\\n    modifier onlyOwner {\\r\\n        // require(msg.sender == owner);\\r\\n        if (msg.sender != i_owner) revert NotOwner();\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    function withdraw() payable onlyOwner public {\\r\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        // // transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // // send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // call\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x6b9d0518187705ba9159e434b588ab755d2e5792ef687116ff60eb8bb201d2a8\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.9;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // Rinkeby ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData(); //returns the amount raise to the power of 8\\r\\n\\r\\n        return uint256(answer * 10000000000);  //this will tell you how much dollars equals 1 ETH to the power of 18\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);  //return USD equivalent of 1 ETH\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5f456b99d35fde0a67e0816fd349f8f5f41af833eea1781dc734aff04f3f10d9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620011c4380380620011c4833981810160405281019062000037919062000129565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b611059806200016b6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad6103e7565b6040516100ba919061091a565b60405180910390f35b6100cb61048d565b005b3480156100d957600080fd5b506100f460048036038101906100ef9190610998565b6106d0565b604051610101919061091a565b60405180910390f35b34801561011657600080fd5b5061011f6106e8565b60405161012c919061091a565b60405180910390f35b34801561014157600080fd5b5061014a6106f5565b6040516101579190610a24565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f610719565b60405161018c9190610a4e565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190610a95565b61073f565b6040516101c99190610a4e565b60405180910390f35b6802b5e3af16b188000061020f60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461077e90919063ffffffff16565b1015610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790610b1f565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156103565734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e79190610b6e565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e5565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103a19190610b6e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561045057600080fd5b505afa158015610464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104889190610bd9565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610514576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156105c05760006002828154811061053a57610539610c06565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105b890610c35565b915050610517565b50600067ffffffffffffffff8111156105dc576105db610c7e565b5b60405190808252806020026020018201604052801561060a5781602001602082028036833780820191505090505b506002908051906020019061062092919061085a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161064790610cde565b60006040518083038185875af1925050503d8060008114610684576040519150601f19603f3d011682016040523d82523d6000602084013e610689565b606091505b50509050806106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c490610d3f565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061074f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061078a836107ba565b90506000670de0b6b3a764000085836107a39190610d5f565b6107ad9190610de8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561080357600080fd5b505afa158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190610e91565b5050509150506402540be400816108529190610f0c565b915050919050565b8280548282559060005260206000209081019282156108d3579160200282015b828111156108d25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061087a565b5b5090506108e091906108e4565b5090565b5b808211156108fd5760008160009055506001016108e5565b5090565b6000819050919050565b61091481610901565b82525050565b600060208201905061092f600083018461090b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109658261093a565b9050919050565b6109758161095a565b811461098057600080fd5b50565b6000813590506109928161096c565b92915050565b6000602082840312156109ae576109ad610935565b5b60006109bc84828501610983565b91505092915050565b6000819050919050565b60006109ea6109e56109e08461093a565b6109c5565b61093a565b9050919050565b60006109fc826109cf565b9050919050565b6000610a0e826109f1565b9050919050565b610a1e81610a03565b82525050565b6000602082019050610a396000830184610a15565b92915050565b610a488161095a565b82525050565b6000602082019050610a636000830184610a3f565b92915050565b610a7281610901565b8114610a7d57600080fd5b50565b600081359050610a8f81610a69565b92915050565b600060208284031215610aab57610aaa610935565b5b6000610ab984828501610a80565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b09601b83610ac2565b9150610b1482610ad3565b602082019050919050565b60006020820190508181036000830152610b3881610afc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b7982610901565b9150610b8483610901565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bb957610bb8610b3f565b5b828201905092915050565b600081519050610bd381610a69565b92915050565b600060208284031215610bef57610bee610935565b5b6000610bfd84828501610bc4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c4082610901565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7357610c72610b3f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cc8600083610cad565b9150610cd382610cb8565b600082019050919050565b6000610ce982610cbb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d29600b83610ac2565b9150610d3482610cf3565b602082019050919050565b60006020820190508181036000830152610d5881610d1c565b9050919050565b6000610d6a82610901565b9150610d7583610901565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dae57610dad610b3f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df382610901565b9150610dfe83610901565b925082610e0e57610e0d610db9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e3881610e19565b8114610e4357600080fd5b50565b600081519050610e5581610e2f565b92915050565b6000819050919050565b610e6e81610e5b565b8114610e7957600080fd5b50565b600081519050610e8b81610e65565b92915050565b600080600080600060a08688031215610ead57610eac610935565b5b6000610ebb88828901610e46565b9550506020610ecc88828901610e7c565b9450506040610edd88828901610bc4565b9350506060610eee88828901610bc4565b9250506080610eff88828901610e46565b9150509295509295909350565b6000610f1782610e5b565b9150610f2283610e5b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6157610f60610b3f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f9e57610f9d610b3f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fdb57610fda610b3f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101857611017610b3f565b5b82820290509291505056fea26469706673582212201564aa9cf7a0e905adddc2c943c9f70b1d242d2979ea5323dcb592b360cc44b564736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b60d428814610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad6103e7565b6040516100ba919061091a565b60405180910390f35b6100cb61048d565b005b3480156100d957600080fd5b506100f460048036038101906100ef9190610998565b6106d0565b604051610101919061091a565b60405180910390f35b34801561011657600080fd5b5061011f6106e8565b60405161012c919061091a565b60405180910390f35b34801561014157600080fd5b5061014a6106f5565b6040516101579190610a24565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f610719565b60405161018c9190610a4e565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190610a95565b61073f565b6040516101c99190610a4e565b60405180910390f35b6802b5e3af16b188000061020f60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461077e90919063ffffffff16565b1015610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790610b1f565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156103565734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e79190610b6e565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e5565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103a19190610b6e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561045057600080fd5b505afa158015610464573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104889190610bd9565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610514576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156105c05760006002828154811061053a57610539610c06565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105b890610c35565b915050610517565b50600067ffffffffffffffff8111156105dc576105db610c7e565b5b60405190808252806020026020018201604052801561060a5781602001602082028036833780820191505090505b506002908051906020019061062092919061085a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161064790610cde565b60006040518083038185875af1925050503d8060008114610684576040519150601f19603f3d011682016040523d82523d6000602084013e610689565b606091505b50509050806106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c490610d3f565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061074f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061078a836107ba565b90506000670de0b6b3a764000085836107a39190610d5f565b6107ad9190610de8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561080357600080fd5b505afa158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190610e91565b5050509150506402540be400816108529190610f0c565b915050919050565b8280548282559060005260206000209081019282156108d3579160200282015b828111156108d25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061087a565b5b5090506108e091906108e4565b5090565b5b808211156108fd5760008160009055506001016108e5565b5090565b6000819050919050565b61091481610901565b82525050565b600060208201905061092f600083018461090b565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109658261093a565b9050919050565b6109758161095a565b811461098057600080fd5b50565b6000813590506109928161096c565b92915050565b6000602082840312156109ae576109ad610935565b5b60006109bc84828501610983565b91505092915050565b6000819050919050565b60006109ea6109e56109e08461093a565b6109c5565b61093a565b9050919050565b60006109fc826109cf565b9050919050565b6000610a0e826109f1565b9050919050565b610a1e81610a03565b82525050565b6000602082019050610a396000830184610a15565b92915050565b610a488161095a565b82525050565b6000602082019050610a636000830184610a3f565b92915050565b610a7281610901565b8114610a7d57600080fd5b50565b600081359050610a8f81610a69565b92915050565b600060208284031215610aab57610aaa610935565b5b6000610ab984828501610a80565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610b09601b83610ac2565b9150610b1482610ad3565b602082019050919050565b60006020820190508181036000830152610b3881610afc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b7982610901565b9150610b8483610901565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bb957610bb8610b3f565b5b828201905092915050565b600081519050610bd381610a69565b92915050565b600060208284031215610bef57610bee610935565b5b6000610bfd84828501610bc4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c4082610901565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7357610c72610b3f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cc8600083610cad565b9150610cd382610cb8565b600082019050919050565b6000610ce982610cbb565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d29600b83610ac2565b9150610d3482610cf3565b602082019050919050565b60006020820190508181036000830152610d5881610d1c565b9050919050565b6000610d6a82610901565b9150610d7583610901565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dae57610dad610b3f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610df382610901565b9150610dfe83610901565b925082610e0e57610e0d610db9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e3881610e19565b8114610e4357600080fd5b50565b600081519050610e5581610e2f565b92915050565b6000819050919050565b610e6e81610e5b565b8114610e7957600080fd5b50565b600081519050610e8b81610e65565b92915050565b600080600080600060a08688031215610ead57610eac610935565b5b6000610ebb88828901610e46565b9550506020610ecc88828901610e7c565b9450506040610edd88828901610bc4565b9350506060610eee88828901610bc4565b9250506080610eff88828901610e46565b9150509295509295909350565b6000610f1782610e5b565b9150610f2283610e5b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f6157610f60610b3f565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f9e57610f9d610b3f565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fdb57610fda610b3f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561101857611017610b3f565b5b82820290509291505056fea26469706673582212201564aa9cf7a0e905adddc2c943c9f70b1d242d2979ea5323dcb592b360cc44b564736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}